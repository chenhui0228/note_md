" ~/.vimrc

set nocompatible
filetype off

" 修改leader键
let mapleader = ','
let g:mapleader = ','

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'

Plugin 'majutsushi/tagbar'
nmap <F3> :TagbarToggle<CR>

syntax enable
set background=dark

Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'
" cs'" 更改
" ysiw" 为一个单间两头添加"
" ds' 删除
" yS yss ysS ySS .
" Visual s S

" Plugin 'tpope/vim-endwise'
" Plugin 'tpope/vim-unimpaired'
Plugin 'godlygeek/tabular'
" 使用 :Tab /命令根据符号对齐文本,如:Tab /| Tab/= Tab/:
" Plugin 'SirVer/ultisnips'
" Plugin 'honza/vim-snippets'

Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'
let NERDTreeWinPos='left'
let NERDTreeWinSize=30
map <F2> :NERDTreeTabsToggle<CR>

Plugin 'kien/ctrlp.vim'

Plugin 'thinca/vim-quickrun'
let g:quickrun_config = {
\   "_" : {
\       "outputter" : "quickfix",
\   },
\}
let g:quickrun_no_default_key_mappings = 1
" nnoremap <expr><silent> <C-c> quickrun#is_running() ? quickrun#sweep_sessions() : "\<C-c>"
nmap <Leader>r <Plug>(quickrun)
map <F5> :QuickRun<CR>

" Plugin 'nvie/vim-flake8'
let python_highlight_all=1
syntax on

Plugin 'bling/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

Plugin 'terryma/vim-multiple-cursors'
let g:multi_cursor_use_default_mapping=0
" Default mapping
let g:multi_cursor_next_key='<C-n>'
let g:multi_cursor_prev_key='<C-p>'
let g:multi_cursor_skip_key='<C-x>'
let g:multi_cursor_quit_key='<Esc>'


Plugin 'scrooloose/nerdcommenter'
" <leader>cc   加注释
" <leader>cu   解开注释
" <leader>c<space>  加上/解开注释, 智能判断
" <leader>cy   先复制, 再注解(p可以进行黏贴) 注释的时候自动加个空格, 强迫症必配
let g:NERDSpaceDelims=1

Plugin 'pangloss/vim-javascript'
Plugin 'Valloric/YouCompleteMe'
let g:ycm_complete_in_comments = 1  "在注释输入中也能补全
let g:ycm_complete_in_strings = 1   "在字符串输入中也能补全
let g:ycm_collect_identifiers_from_comments_and_strings = 1   "注释和字符串中的文字也会被收入补全
let g:ycm_collect_identifiers_from_tags_files = 1
" 开启语法关键字补全
let g:ycm_seed_identifiers_with_syntax=1
nnoremap <leader>jd :YcmCompleter GoToDefinitionElseDeclaration<CR>
nnoremap <leader>gd :YcmCompleter GoToDeclaration<CR>

Plugin 'jiangmiao/auto-pairs'

Plugin 'klen/python-mode'
filetype indent on
filetype plugin on  
autocmd FileType python set omnifunc=pythoncomplete#Complete  
autocmd FileType javascrīpt set omnifunc=javascriptcomplete#CompleteJS  
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags  
autocmd FileType css set omnifunc=csscomplete#CompleteCSS  
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags  
autocmd FileType php set omnifunc=phpcomplete#CompletePHP  
autocmd FileType c set omnifunc=ccomplete#Complete 

Plugin 'plasticboy/vim-markdown'
Plugin 'isnowfy/python-vim-instant-markdown'


call vundle#end()


syntax enable
syntax on

set mouse-=a 
set shortmess=atI
set nu
set cindent

set ai
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
set shiftround
set backspace=indent,eol,start
set whichwrap+=<,>,h,l

" set cursorcolumn
set cursorline

set ruler
set showcmd
set showmode
set scrolloff=8
set laststatus=2

set showmatch
set matchtime=2

set hlsearch
set incsearch
set ignorecase
set smartcase

set foldmethod=indent
" set foldlevel=99
nnoremap <silent>  <Space> za


" ===============================================
" 自定义快捷键设置
" ===============================================
map Y y$
nnoremap <CR> o<Esc>

nnoremap / /\v
vnoremap / /\v

nnoremap ` '
nnoremap ' `

map <Left> <Nop>
map <Right> <Nop>
map <Up> <Nop>
map <Down> <Nop>

nnoremap k gk
nnoremap gk k
nnoremap j gj
nnoremap gj j

map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

nnoremap <silent> n nzz
nnoremap <silent> N Nzz
nnoremap <silent> * *zz
nnoremap <silent> # #zz
nnoremap <silent> g* g*zz


" 自动缩进及与系统剪切板保持互动，按F4启动paste模式使得不错位,再按F4切回
" nopaste模式，进入自动缩进的模式
set smartindent
set autoindent
set clipboard=unnamed
set pastetoggle=<F4>

" 设置<C-a><C-x>默认使用时进制
set nrformats=
" 如遇Unicode值大于255的文本，不必等到空格再折行
set formatoptions+=m
" 合并两行中文时，不在中间加空格
set formatoptions+=B

" 插入模式下用绝对行号, 普通模式下用相对
set relativenumber number
au FocusLost * :set norelativenumber number
au FocusGained * :set relativenumber
autocmd InsertEnter * :set norelativenumber number
autocmd InsertLeave * :set relativenumber
function! NumberToggle()
    if(&relativenumber == 1)
        set norelativenumber number
    else
        set relativenumber
    endif
endfunc
nnoremap <F8> :call NumberToggle()<cr>

" au FileType python set omnifunc=pythoncomplete#Complete
" let g:SuperTabDefaultCompletionType = "context"
" let g:SuperTabContextDefaultCompletionType = "<c-n>"
          

" 打开自动定位到最后编辑的位置, 需要确认 .viminfo 当前用户可写 
set viminfo^=%
if has("autocmd")
    au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif  


" 状态栏改为2行
set statusline=%<%f\ %h%m%r%=%k[%{(&fenc==\"\")?&enc:&fenc}%{(&bomb?\",BOM\":\"\")}]\ %-14.(%l,%c%V%)\ %P

" 定义函数AutoSetFileHead，自动插入文件头
autocmd BufNewFile *.sh,*.py exec ":call AutoSetFileHead()"
function! AutoSetFileHead()
    "如果文件类型为.sh文件
    if &filetype == 'sh'
        call setline(1, "\#!/bin/bash")
    endif

    "如果文件类型为python
    if &filetype == 'python'
        call setline(1, "\#!/usr/bin/env python")
        call append(1, "\# encoding: utf-8")
    endif

    normal G
    normal o
    normal o
endfunc

" Add the virtualenv's site-packages to vim path
py << EOF
import os.path
import sys
import vim
if 'VIRTUAL_ENV' in os.environ:
    project_base_dir = os.environ['VIRTUAL_ENV']
    sys.path.insert(0, project_base_dir)
    activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
    execfile(activate_this, dict(__file__=activate_this))
EOF

au BufNewFile, BufRead *.py
            \ set tabstop=4
            \ set softtabstop=4
            \ set shiftwidth=4
            \ set textwidth=79
            \ set expandtab
            \ set autoindent
            \ set fileformat=unix
            \ set encoding=utf-8

" 显示行尾多余空格并在保存python文件时删除多余空格
au BufRead, BufNewFile *.py, *.pyw, *.c, *.h, *.html, *.cpp, *.sh match BadWhitespace /\s\+$/
fun! <SID>StripTrailingWhitespaces()
    let l = line(".")
    let c = col(".")
    %s/\s\+$//e
    call cursor(l, c)
endfun
autocmd FileType c,cpp,java,go,php,javascript,puppet,python,rust,twig,xml,yml,perl autocmd BufWritePre <buffer> :call <SID>StripTrailingWhitespaces()

" 强制保存
cnoremap w!! w !sudo tee > /dev/null %
